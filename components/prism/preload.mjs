// This file is generated by astro-prism/scripts/generate-load.mjs
export function loadLanguage(lang) {
  console.log('Loading', lang);

  if(lang === 'markup') {
    return import('prismjs/components/prism-markup.js');
  }

  if(lang === 'css') {
    return import('prismjs/components/prism-css.js');
  }

  if(lang === 'clike') {
    return import('prismjs/components/prism-clike.js');
  }

  if(lang === 'javascript') {
    return import('prismjs/components/prism-javascript.js');
  }

  if(lang === 'abap') {
    return import('prismjs/components/prism-abap.js');
  }

  if(lang === 'abnf') {
    return import('prismjs/components/prism-abnf.js');
  }

  if(lang === 'actionscript') {
    return import('prismjs/components/prism-actionscript.js');
  }

  if(lang === 'ada') {
    return import('prismjs/components/prism-ada.js');
  }

  if(lang === 'agda') {
    return import('prismjs/components/prism-agda.js');
  }

  if(lang === 'al') {
    return import('prismjs/components/prism-al.js');
  }

  if(lang === 'antlr4') {
    return import('prismjs/components/prism-antlr4.js');
  }

  if(lang === 'apacheconf') {
    return import('prismjs/components/prism-apacheconf.js');
  }

  if(lang === 'apex') {
    return import('prismjs/components/prism-apex.js');
  }

  if(lang === 'apl') {
    return import('prismjs/components/prism-apl.js');
  }

  if(lang === 'applescript') {
    return import('prismjs/components/prism-applescript.js');
  }

  if(lang === 'aql') {
    return import('prismjs/components/prism-aql.js');
  }

  if(lang === 'arduino') {
    return import('prismjs/components/prism-arduino.js');
  }

  if(lang === 'arff') {
    return import('prismjs/components/prism-arff.js');
  }

  if(lang === 'asciidoc') {
    return import('prismjs/components/prism-asciidoc.js');
  }

  if(lang === 'aspnet') {
    return import('prismjs/components/prism-aspnet.js');
  }

  if(lang === 'asm6502') {
    return import('prismjs/components/prism-asm6502.js');
  }

  if(lang === 'autohotkey') {
    return import('prismjs/components/prism-autohotkey.js');
  }

  if(lang === 'autoit') {
    return import('prismjs/components/prism-autoit.js');
  }

  if(lang === 'bash') {
    return import('prismjs/components/prism-bash.js');
  }

  if(lang === 'basic') {
    return import('prismjs/components/prism-basic.js');
  }

  if(lang === 'batch') {
    return import('prismjs/components/prism-batch.js');
  }

  if(lang === 'bbcode') {
    return import('prismjs/components/prism-bbcode.js');
  }

  if(lang === 'birb') {
    return import('prismjs/components/prism-birb.js');
  }

  if(lang === 'bison') {
    return import('prismjs/components/prism-bison.js');
  }

  if(lang === 'bnf') {
    return import('prismjs/components/prism-bnf.js');
  }

  if(lang === 'brainfuck') {
    return import('prismjs/components/prism-brainfuck.js');
  }

  if(lang === 'brightscript') {
    return import('prismjs/components/prism-brightscript.js');
  }

  if(lang === 'bro') {
    return import('prismjs/components/prism-bro.js');
  }

  if(lang === 'bsl') {
    return import('prismjs/components/prism-bsl.js');
  }

  if(lang === 'c') {
    return import('prismjs/components/prism-c.js');
  }

  if(lang === 'csharp') {
    return import('prismjs/components/prism-csharp.js');
  }

  if(lang === 'cpp') {
    return import('prismjs/components/prism-cpp.js');
  }

  if(lang === 'cil') {
    return import('prismjs/components/prism-cil.js');
  }

  if(lang === 'clojure') {
    return import('prismjs/components/prism-clojure.js');
  }

  if(lang === 'cmake') {
    return import('prismjs/components/prism-cmake.js');
  }

  if(lang === 'coffeescript') {
    return import('prismjs/components/prism-coffeescript.js');
  }

  if(lang === 'concurnas') {
    return import('prismjs/components/prism-concurnas.js');
  }

  if(lang === 'csp') {
    return import('prismjs/components/prism-csp.js');
  }

  if(lang === 'crystal') {
    return import('prismjs/components/prism-crystal.js');
  }

  if(lang === 'css-extras') {
    return import('prismjs/components/prism-css-extras.js');
  }

  if(lang === 'cypher') {
    return import('prismjs/components/prism-cypher.js');
  }

  if(lang === 'd') {
    return import('prismjs/components/prism-d.js');
  }

  if(lang === 'dart') {
    return import('prismjs/components/prism-dart.js');
  }

  if(lang === 'dataweave') {
    return import('prismjs/components/prism-dataweave.js');
  }

  if(lang === 'dax') {
    return import('prismjs/components/prism-dax.js');
  }

  if(lang === 'dhall') {
    return import('prismjs/components/prism-dhall.js');
  }

  if(lang === 'diff') {
    return import('prismjs/components/prism-diff.js');
  }

  if(lang === 'django') {
    return import('prismjs/components/prism-django.js');
  }

  if(lang === 'dns-zone-file') {
    return import('prismjs/components/prism-dns-zone-file.js');
  }

  if(lang === 'docker') {
    return import('prismjs/components/prism-docker.js');
  }

  if(lang === 'ebnf') {
    return import('prismjs/components/prism-ebnf.js');
  }

  if(lang === 'editorconfig') {
    return import('prismjs/components/prism-editorconfig.js');
  }

  if(lang === 'eiffel') {
    return import('prismjs/components/prism-eiffel.js');
  }

  if(lang === 'ejs') {
    return import('prismjs/components/prism-ejs.js');
  }

  if(lang === 'elixir') {
    return import('prismjs/components/prism-elixir.js');
  }

  if(lang === 'elm') {
    return import('prismjs/components/prism-elm.js');
  }

  if(lang === 'etlua') {
    return import('prismjs/components/prism-etlua.js');
  }

  if(lang === 'erb') {
    return import('prismjs/components/prism-erb.js');
  }

  if(lang === 'erlang') {
    return import('prismjs/components/prism-erlang.js');
  }

  if(lang === 'excel-formula') {
    return import('prismjs/components/prism-excel-formula.js');
  }

  if(lang === 'fsharp') {
    return import('prismjs/components/prism-fsharp.js');
  }

  if(lang === 'factor') {
    return import('prismjs/components/prism-factor.js');
  }

  if(lang === 'firestore-security-rules') {
    return import('prismjs/components/prism-firestore-security-rules.js');
  }

  if(lang === 'flow') {
    return import('prismjs/components/prism-flow.js');
  }

  if(lang === 'fortran') {
    return import('prismjs/components/prism-fortran.js');
  }

  if(lang === 'ftl') {
    return import('prismjs/components/prism-ftl.js');
  }

  if(lang === 'gml') {
    return import('prismjs/components/prism-gml.js');
  }

  if(lang === 'gcode') {
    return import('prismjs/components/prism-gcode.js');
  }

  if(lang === 'gdscript') {
    return import('prismjs/components/prism-gdscript.js');
  }

  if(lang === 'gedcom') {
    return import('prismjs/components/prism-gedcom.js');
  }

  if(lang === 'gherkin') {
    return import('prismjs/components/prism-gherkin.js');
  }

  if(lang === 'git') {
    return import('prismjs/components/prism-git.js');
  }

  if(lang === 'glsl') {
    return import('prismjs/components/prism-glsl.js');
  }

  if(lang === 'go') {
    return import('prismjs/components/prism-go.js');
  }

  if(lang === 'graphql') {
    return import('prismjs/components/prism-graphql.js');
  }

  if(lang === 'groovy') {
    return import('prismjs/components/prism-groovy.js');
  }

  if(lang === 'haml') {
    return import('prismjs/components/prism-haml.js');
  }

  if(lang === 'handlebars') {
    return import('prismjs/components/prism-handlebars.js');
  }

  if(lang === 'haskell') {
    return import('prismjs/components/prism-haskell.js');
  }

  if(lang === 'haxe') {
    return import('prismjs/components/prism-haxe.js');
  }

  if(lang === 'hcl') {
    return import('prismjs/components/prism-hcl.js');
  }

  if(lang === 'hlsl') {
    return import('prismjs/components/prism-hlsl.js');
  }

  if(lang === 'http') {
    return import('prismjs/components/prism-http.js');
  }

  if(lang === 'hpkp') {
    return import('prismjs/components/prism-hpkp.js');
  }

  if(lang === 'hsts') {
    return import('prismjs/components/prism-hsts.js');
  }

  if(lang === 'ichigojam') {
    return import('prismjs/components/prism-ichigojam.js');
  }

  if(lang === 'icon') {
    return import('prismjs/components/prism-icon.js');
  }

  if(lang === 'ignore') {
    return import('prismjs/components/prism-ignore.js');
  }

  if(lang === 'inform7') {
    return import('prismjs/components/prism-inform7.js');
  }

  if(lang === 'ini') {
    return import('prismjs/components/prism-ini.js');
  }

  if(lang === 'io') {
    return import('prismjs/components/prism-io.js');
  }

  if(lang === 'j') {
    return import('prismjs/components/prism-j.js');
  }

  if(lang === 'java') {
    return import('prismjs/components/prism-java.js');
  }

  if(lang === 'javadoc') {
    return import('prismjs/components/prism-javadoc.js');
  }

  if(lang === 'javadoclike') {
    return import('prismjs/components/prism-javadoclike.js');
  }

  if(lang === 'javastacktrace') {
    return import('prismjs/components/prism-javastacktrace.js');
  }

  if(lang === 'jolie') {
    return import('prismjs/components/prism-jolie.js');
  }

  if(lang === 'jq') {
    return import('prismjs/components/prism-jq.js');
  }

  if(lang === 'jsdoc') {
    return import('prismjs/components/prism-jsdoc.js');
  }

  if(lang === 'js-extras') {
    return import('prismjs/components/prism-js-extras.js');
  }

  if(lang === 'json') {
    return import('prismjs/components/prism-json.js');
  }

  if(lang === 'json5') {
    return import('prismjs/components/prism-json5.js');
  }

  if(lang === 'jsonp') {
    return import('prismjs/components/prism-jsonp.js');
  }

  if(lang === 'jsstacktrace') {
    return import('prismjs/components/prism-jsstacktrace.js');
  }

  if(lang === 'js-templates') {
    return import('prismjs/components/prism-js-templates.js');
  }

  if(lang === 'julia') {
    return import('prismjs/components/prism-julia.js');
  }

  if(lang === 'keyman') {
    return import('prismjs/components/prism-keyman.js');
  }

  if(lang === 'kotlin') {
    return import('prismjs/components/prism-kotlin.js');
  }

  if(lang === 'latex') {
    return import('prismjs/components/prism-latex.js');
  }

  if(lang === 'latte') {
    return import('prismjs/components/prism-latte.js');
  }

  if(lang === 'less') {
    return import('prismjs/components/prism-less.js');
  }

  if(lang === 'lilypond') {
    return import('prismjs/components/prism-lilypond.js');
  }

  if(lang === 'liquid') {
    return import('prismjs/components/prism-liquid.js');
  }

  if(lang === 'lisp') {
    return import('prismjs/components/prism-lisp.js');
  }

  if(lang === 'livescript') {
    return import('prismjs/components/prism-livescript.js');
  }

  if(lang === 'llvm') {
    return import('prismjs/components/prism-llvm.js');
  }

  if(lang === 'lolcode') {
    return import('prismjs/components/prism-lolcode.js');
  }

  if(lang === 'lua') {
    return import('prismjs/components/prism-lua.js');
  }

  if(lang === 'makefile') {
    return import('prismjs/components/prism-makefile.js');
  }

  if(lang === 'markdown') {
    return import('prismjs/components/prism-markdown.js');
  }

  if(lang === 'markup-templating') {
    return import('prismjs/components/prism-markup-templating.js');
  }

  if(lang === 'matlab') {
    return import('prismjs/components/prism-matlab.js');
  }

  if(lang === 'mel') {
    return import('prismjs/components/prism-mel.js');
  }

  if(lang === 'mizar') {
    return import('prismjs/components/prism-mizar.js');
  }

  if(lang === 'mongodb') {
    return import('prismjs/components/prism-mongodb.js');
  }

  if(lang === 'monkey') {
    return import('prismjs/components/prism-monkey.js');
  }

  if(lang === 'moonscript') {
    return import('prismjs/components/prism-moonscript.js');
  }

  if(lang === 'n1ql') {
    return import('prismjs/components/prism-n1ql.js');
  }

  if(lang === 'n4js') {
    return import('prismjs/components/prism-n4js.js');
  }

  if(lang === 'nand2tetris-hdl') {
    return import('prismjs/components/prism-nand2tetris-hdl.js');
  }

  if(lang === 'naniscript') {
    return import('prismjs/components/prism-naniscript.js');
  }

  if(lang === 'nasm') {
    return import('prismjs/components/prism-nasm.js');
  }

  if(lang === 'neon') {
    return import('prismjs/components/prism-neon.js');
  }

  if(lang === 'nginx') {
    return import('prismjs/components/prism-nginx.js');
  }

  if(lang === 'nim') {
    return import('prismjs/components/prism-nim.js');
  }

  if(lang === 'nix') {
    return import('prismjs/components/prism-nix.js');
  }

  if(lang === 'nsis') {
    return import('prismjs/components/prism-nsis.js');
  }

  if(lang === 'objectivec') {
    return import('prismjs/components/prism-objectivec.js');
  }

  if(lang === 'ocaml') {
    return import('prismjs/components/prism-ocaml.js');
  }

  if(lang === 'opencl') {
    return import('prismjs/components/prism-opencl.js');
  }

  if(lang === 'oz') {
    return import('prismjs/components/prism-oz.js');
  }

  if(lang === 'parigp') {
    return import('prismjs/components/prism-parigp.js');
  }

  if(lang === 'parser') {
    return import('prismjs/components/prism-parser.js');
  }

  if(lang === 'pascal') {
    return import('prismjs/components/prism-pascal.js');
  }

  if(lang === 'pascaligo') {
    return import('prismjs/components/prism-pascaligo.js');
  }

  if(lang === 'pcaxis') {
    return import('prismjs/components/prism-pcaxis.js');
  }

  if(lang === 'peoplecode') {
    return import('prismjs/components/prism-peoplecode.js');
  }

  if(lang === 'perl') {
    return import('prismjs/components/prism-perl.js');
  }

  if(lang === 'php') {
    return import('prismjs/components/prism-php.js');
  }

  if(lang === 'phpdoc') {
    return import('prismjs/components/prism-phpdoc.js');
  }

  if(lang === 'php-extras') {
    return import('prismjs/components/prism-php-extras.js');
  }

  if(lang === 'plsql') {
    return import('prismjs/components/prism-plsql.js');
  }

  if(lang === 'powerquery') {
    return import('prismjs/components/prism-powerquery.js');
  }

  if(lang === 'powershell') {
    return import('prismjs/components/prism-powershell.js');
  }

  if(lang === 'processing') {
    return import('prismjs/components/prism-processing.js');
  }

  if(lang === 'prolog') {
    return import('prismjs/components/prism-prolog.js');
  }

  if(lang === 'promql') {
    return import('prismjs/components/prism-promql.js');
  }

  if(lang === 'properties') {
    return import('prismjs/components/prism-properties.js');
  }

  if(lang === 'protobuf') {
    return import('prismjs/components/prism-protobuf.js');
  }

  if(lang === 'pug') {
    return import('prismjs/components/prism-pug.js');
  }

  if(lang === 'puppet') {
    return import('prismjs/components/prism-puppet.js');
  }

  if(lang === 'pure') {
    return import('prismjs/components/prism-pure.js');
  }

  if(lang === 'purebasic') {
    return import('prismjs/components/prism-purebasic.js');
  }

  if(lang === 'purescript') {
    return import('prismjs/components/prism-purescript.js');
  }

  if(lang === 'python') {
    return import('prismjs/components/prism-python.js');
  }

  if(lang === 'q') {
    return import('prismjs/components/prism-q.js');
  }

  if(lang === 'qml') {
    return import('prismjs/components/prism-qml.js');
  }

  if(lang === 'qore') {
    return import('prismjs/components/prism-qore.js');
  }

  if(lang === 'r') {
    return import('prismjs/components/prism-r.js');
  }

  if(lang === 'racket') {
    return import('prismjs/components/prism-racket.js');
  }

  if(lang === 'jsx') {
    return import('prismjs/components/prism-jsx.js');
  }

  if(lang === 'tsx') {
    return import('prismjs/components/prism-tsx.js');
  }

  if(lang === 'reason') {
    return import('prismjs/components/prism-reason.js');
  }

  if(lang === 'regex') {
    return import('prismjs/components/prism-regex.js');
  }

  if(lang === 'renpy') {
    return import('prismjs/components/prism-renpy.js');
  }

  if(lang === 'rest') {
    return import('prismjs/components/prism-rest.js');
  }

  if(lang === 'rip') {
    return import('prismjs/components/prism-rip.js');
  }

  if(lang === 'roboconf') {
    return import('prismjs/components/prism-roboconf.js');
  }

  if(lang === 'robotframework') {
    return import('prismjs/components/prism-robotframework.js');
  }

  if(lang === 'ruby') {
    return import('prismjs/components/prism-ruby.js');
  }

  if(lang === 'rust') {
    return import('prismjs/components/prism-rust.js');
  }

  if(lang === 'sas') {
    return import('prismjs/components/prism-sas.js');
  }

  if(lang === 'sass') {
    return import('prismjs/components/prism-sass.js');
  }

  if(lang === 'scss') {
    return import('prismjs/components/prism-scss.js');
  }

  if(lang === 'scala') {
    return import('prismjs/components/prism-scala.js');
  }

  if(lang === 'scheme') {
    return import('prismjs/components/prism-scheme.js');
  }

  if(lang === 'shell-session') {
    return import('prismjs/components/prism-shell-session.js');
  }

  if(lang === 'smali') {
    return import('prismjs/components/prism-smali.js');
  }

  if(lang === 'smalltalk') {
    return import('prismjs/components/prism-smalltalk.js');
  }

  if(lang === 'smarty') {
    return import('prismjs/components/prism-smarty.js');
  }

  if(lang === 'sml') {
    return import('prismjs/components/prism-sml.js');
  }

  if(lang === 'solidity') {
    return import('prismjs/components/prism-solidity.js');
  }

  if(lang === 'solution-file') {
    return import('prismjs/components/prism-solution-file.js');
  }

  if(lang === 'soy') {
    return import('prismjs/components/prism-soy.js');
  }

  if(lang === 'sparql') {
    return import('prismjs/components/prism-sparql.js');
  }

  if(lang === 'splunk-spl') {
    return import('prismjs/components/prism-splunk-spl.js');
  }

  if(lang === 'sqf') {
    return import('prismjs/components/prism-sqf.js');
  }

  if(lang === 'sql') {
    return import('prismjs/components/prism-sql.js');
  }

  if(lang === 'stan') {
    return import('prismjs/components/prism-stan.js');
  }

  if(lang === 'iecst') {
    return import('prismjs/components/prism-iecst.js');
  }

  if(lang === 'stylus') {
    return import('prismjs/components/prism-stylus.js');
  }

  if(lang === 'swift') {
    return import('prismjs/components/prism-swift.js');
  }

  if(lang === 't4-templating') {
    return import('prismjs/components/prism-t4-templating.js');
  }

  if(lang === 't4-cs') {
    return import('prismjs/components/prism-t4-cs.js');
  }

  if(lang === 't4-vb') {
    return import('prismjs/components/prism-t4-vb.js');
  }

  if(lang === 'tap') {
    return import('prismjs/components/prism-tap.js');
  }

  if(lang === 'tcl') {
    return import('prismjs/components/prism-tcl.js');
  }

  if(lang === 'tt2') {
    return import('prismjs/components/prism-tt2.js');
  }

  if(lang === 'textile') {
    return import('prismjs/components/prism-textile.js');
  }

  if(lang === 'toml') {
    return import('prismjs/components/prism-toml.js');
  }

  if(lang === 'turtle') {
    return import('prismjs/components/prism-turtle.js');
  }

  if(lang === 'twig') {
    return import('prismjs/components/prism-twig.js');
  }

  if(lang === 'typescript') {
    return import('prismjs/components/prism-typescript.js');
  }

  if(lang === 'typoscript') {
    return import('prismjs/components/prism-typoscript.js');
  }

  if(lang === 'unrealscript') {
    return import('prismjs/components/prism-unrealscript.js');
  }

  if(lang === 'vala') {
    return import('prismjs/components/prism-vala.js');
  }

  if(lang === 'vbnet') {
    return import('prismjs/components/prism-vbnet.js');
  }

  if(lang === 'velocity') {
    return import('prismjs/components/prism-velocity.js');
  }

  if(lang === 'verilog') {
    return import('prismjs/components/prism-verilog.js');
  }

  if(lang === 'vhdl') {
    return import('prismjs/components/prism-vhdl.js');
  }

  if(lang === 'vim') {
    return import('prismjs/components/prism-vim.js');
  }

  if(lang === 'visual-basic') {
    return import('prismjs/components/prism-visual-basic.js');
  }

  if(lang === 'warpscript') {
    return import('prismjs/components/prism-warpscript.js');
  }

  if(lang === 'wasm') {
    return import('prismjs/components/prism-wasm.js');
  }

  if(lang === 'wiki') {
    return import('prismjs/components/prism-wiki.js');
  }

  if(lang === 'xeora') {
    return import('prismjs/components/prism-xeora.js');
  }

  if(lang === 'xml-doc') {
    return import('prismjs/components/prism-xml-doc.js');
  }

  if(lang === 'xojo') {
    return import('prismjs/components/prism-xojo.js');
  }

  if(lang === 'xquery') {
    return import('prismjs/components/prism-xquery.js');
  }

  if(lang === 'yaml') {
    return import('prismjs/components/prism-yaml.js');
  }

  if(lang === 'yang') {
    return import('prismjs/components/prism-yang.js');
  }

  if(lang === 'zig') {
    return import('prismjs/components/prism-zig.js');
  }
}